(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{389:function(a,s,e){"use strict";e.r(s);var t=e(28),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"git-intermedio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-intermedio"}},[a._v("#")]),a._v(" GIT Intermedio")]),a._v(" "),e("p",[a._v("Github es la plataforma online para trabajar con proyectos en git, en simples palabras es utilizar git de forma remota pero entiendase que son cosas totamente distintas")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://pixelpioneers.co/blog/2017/git-basics-explained-by-designing-a-new-car",target:"_blank",rel:"noopener noreferrer"}},[a._v("Explicación simple"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"viajes-a-traves-de-los-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#viajes-a-traves-de-los-commit"}},[a._v("#")]),a._v(" Viajes a través de los commit")]),a._v(" "),e("p",[a._v("Vamos a conocer como podemos movernos entre los diferentes commit que tengamos registrados, supongamos que tenemos los siguientes commit:")]),a._v(" "),e("ul",[e("li",[a._v("f82f457 (HEAD -> master) mas comandos agregados")]),a._v(" "),e("li",[a._v("f52f3da nuevos comandos en fundamentos.md")]),a._v(" "),e("li",[a._v("e4ab8af mi primer commit")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da")]),a._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("mixed f52f3da\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da y eliminamos los cambios futuros")]),a._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard f52f3da\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra todos los cambios incluso si borramos los commit")]),a._v("\ngit reflog\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da y podemos restaurar los archivos")]),a._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard f52f3da\n")])])]),e("p",[a._v("Si no hicimos un commit pero aún así queremos revertir los cambios en un archivo específico podríamos utilizar el siguiente comando:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout -- nombreArchivo.conExtensión\n")])])]),e("p",[a._v("Si deseamos destruir todos los cambios sin haber realizado un commit podemos utilizar:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git reset --hard\n")])])]),e("p",[a._v("Para mayor información visite: "),e("a",{attrs:{href:"https://git-scm.com/book/es/v2/Herramientas-de-Git-Reiniciar-Desmitificado",target:"_blank",rel:"noopener noreferrer"}},[a._v("Click aquí"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"renombrar-archivos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#renombrar-archivos"}},[a._v("#")]),a._v(" Renombrar archivos")]),a._v(" "),e("p",[a._v("Puede que queramos renombrar un archivo, es recomendable hacerlo directamente en la línea de comandos para registrar los cambios con git.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Cambiar nombre")]),a._v("\ngit mv nombreOriginal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue nombreNuevo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue\n")])])]),e("p",[a._v("Recuerden hacer el commit para registrar los cambios en git.")]),a._v(" "),e("h2",{attrs:{id:"eliminar-archivos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eliminar-archivos"}},[a._v("#")]),a._v(" Eliminar archivos")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Cambiar nombre")]),a._v("\ngit rm nombreArchivo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue\n")])])]),e("p",[a._v("También recordar hacer el commit para salgar cambios en git.")]),a._v(" "),e("h2",{attrs:{id:"ignorando-archivos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignorando-archivos"}},[a._v("#")]),a._v(" Ignorando Archivos")]),a._v(" "),e("p",[a._v("Para no hacer seguimiento de carpetas o archivos, debemos crear el siguiente archivo:")]),a._v(" "),e("ul",[e("li",[a._v(".gitignore\n"),e("br"),a._v("\nSu estructura de ejemplo sería así:")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("arhivo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ignora el archivo en cuestion")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ignora todos los arhivos con extensión .js")]),a._v("\nnode_modules"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Ignora toda la carpeta")]),a._v("\n")])])]),e("h2",{attrs:{id:"ramas-o-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ramas-o-branch"}},[a._v("#")]),a._v(" Ramas o branch")]),a._v(" "),e("p",[a._v('Hasta el momento solo hemos trabajado en la rama "master" pero puede que necesitemos crear diferentes ramas para los seguimientos de git.')]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crea una nueva rama")]),a._v("\ngit branch nombreRama\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos muestra en que rama estamos")]),a._v("\ngit branch\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos movemos a la nueva rama")]),a._v("\ngit checkout nombreRama\n")])])]),e("p",[a._v("Podemos unir la rama master con la nueva, para eso tenemos que estar en la master para ejecutar el siguiente comando:")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos movemos a la nueva rama")]),a._v("\ngit merge nombreRama\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Eliminar una rama")]),a._v("\ngit branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d nombreRama\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("Atajos")]),a._v(" "),e("p",[a._v("Podemos utilizar "),e("code",[a._v("git checkout -b nuevaRama")]),a._v(" para crear la nuevaRama y viajar a ella.")])]),a._v(" "),e("h2",{attrs:{id:"tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[a._v("#")]),a._v(" Tags")]),a._v(" "),e("p",[a._v("Con los tags podemos hacer versiones de nuestro proyecto.")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear un tags")]),a._v("\ngit tag versionAlpha "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"versión alpha"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Listar tags")]),a._v("\ngit tag\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Borrar tags")]),a._v("\ngit tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d nombreTags\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Hacer una versión en un commit anterior ej: f52f3da")]),a._v("\ngit tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("a nombreTag f52f3da "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"version alpha"')]),a._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Mostrar información del tag")]),a._v("\ngit show nombreTag\n")])])]),e("h2",{attrs:{id:"github-subir-los-tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-subir-los-tags"}},[a._v("#")]),a._v(" GITHUB: Subir los tags")]),a._v(" "),e("p",[a._v("Por defecto si creaste un proyecto con diferentes versiones no subirá los tags, para eso tenemos el siguiente comando.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push --tags\n")])])]),e("h2",{attrs:{id:"push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[a._v("#")]),a._v(" Push")]),a._v(" "),e("p",[a._v("Al ejecutar el comando "),e("code",[a._v("git push")]),a._v(" estaremos subiendo todos los cambios locales al servidor remoto de github, ten en cuenta que tienes que estar enlazado con tu repositorio, para eso puedes utilizar "),e("code",[a._v("git remote -v")]),a._v(" luego ejecuta:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push\n")])])]),e("h2",{attrs:{id:"pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[a._v("#")]),a._v(" Pull")]),a._v(" "),e("p",[a._v("Cuando realizamos cambios directamente en github pero no de forma local, es esencial realizar un pull, donde descargaremos los cambios realizados para seguir trabajando normalmente. "),e("br"),a._v("\nEs importante estar enlazados remotamente, puedes verificar con: "),e("code",[a._v("git remote -v")]),a._v(", luego ejecuta:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git pull\n")])])]),e("h2",{attrs:{id:"fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[a._v("#")]),a._v(" Fetch")]),a._v(" "),e("p",[a._v("Este comando hace la comparación de nuestros archivos locales con los del servidor, si existiera alguna diferencia nos pediría realizar un "),e("code",[a._v("get pull")]),a._v(" para realizar un match de nuestros arhivos locales.")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git fetch\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);